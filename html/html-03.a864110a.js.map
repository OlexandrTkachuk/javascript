{"mappings":"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","sources":["src/js/js-03.js"],"sourcesContent":["// task 1\nconst user = {};\n\nuser.name = 'Ivan';\nuser.surname = 'Smith';\nuser.name = 'Petro';\ndelete user.name;\n\n// task 2\n// Напиши функцію, яка перевіряє чи ключ знаходиться в обєкті\nlet schedule = {\n  name: 'alex',\n  age: 15,\n};\n\nfunction isEmpty(obj, key) {\n  if (key in obj) {\n    return true;\n  }\n  return false;\n}\n\nconsole.log(isEmpty(schedule, 'name'));\n\n//task 3\n// Напиши функція яка приймає обєкт та підсумовує уі його значення\nconst salaries = {\n  jhon: 100,\n  ann: 160,\n  pete: 130,\n};\n\nlet totalSalary = 0;\n\nfunction sum(object) {\n  for (key in object) {\n    const value = object[key];\n\n    totalSalary += value;\n  }\n\n  return totalSalary;\n}\n\nconsole.log('сума усіх зарплат', sum(salaries));\n\n//task 4\n// Створіть функцію multiplyNumberic(obj), яка перемножує усі числові значення на 2\n\nconst menu = {\n  width: 200,\n  height: 300,\n  title: 'my menu',\n};\n\nfunction multiplyNumberic(obj) {\n  for (key in obj) {\n    if (typeof obj[key] === 'number') {\n      obj[key] = obj[key] * 2;\n    }\n  }\n}\n\nconsole.log('меню до виклику функції', menu);\nmultiplyNumberic(menu);\nconsole.log('меню після виклику функції', menu);\n\n// object methods\n\n// task 5\n// Створи обєкт, який має три методи: read() приймає два параметри - числа і записує їх у обєкт. sum() додає задані значення mul() перемножує задані значення\nconst calculator = {\n  read(a, b) {\n    this.a = a;\n    this.b = b;\n  },\n  sum() {\n    return this.a + this.b;\n  },\n  mul() {\n    return this.a * this.b;\n  },\n};\n\ncalculator.read(5, 10);\nconsole.log('caclulator.sum() =', calculator.sum());\nconsole.log('calculator.mul() =', calculator.mul());\n\n// task 6\n// Існує обєкт ladder який має значення Step та методи які піднімають шаг або опускають його на 1. Потрібно зробити ланцюжок викликів послідовно\nlet ladder = {\n  step: 0,\n  up() {\n    this.step++;\n    return this;\n  },\n  down() {\n    this.step--;\n    return this;\n  },\n  showStep() {\n    console.log('chaining step =>', this.step);\n    return this;\n  },\n};\n// Рішення полянає у повернені самого обєкта з кожного виклику функціяотже кожний наступний викликаний метод буде мати перед собою обєкт а отже необхіжний для this контекст \"return this\" вирішує проблему виклику методів ланцюгом\n\nladder.up().up().down().up().down().up().showStep();\n\n//task 7\n// Створити калькулятор за допомогою конструктора\n// - створити функцію, яка буде створювати обєкт-конструктор\n// - створити зміну-екземпляр який буде брати дані з нашого конструктора new Cacl()\n// - викликати методи на екземплярі\nfunction Calc() {\n  this.read = function (a, b) {\n    this.a = a;\n    this.b = b;\n  };\n  this.sum = function () {\n    return this.a + this.b;\n  };\n  this.mul = function () {\n    return this.a * this.b;\n  };\n}\n\nconst calc = new Calc();\n\ncalc.read(5, 10);\nconsole.log('calculator constructor sum --> ', calc.sum());\nconsole.log('calculator constructor mul --> ', calc.mul());\n\n// task 8\n// Створити Accumulator(startingValue) - функцію-конструктор\n// Створенний обєкт повинен - зберігати значення у властивості value. Початкова значення має значення аргументу startingValue. - метод read() - повинен використовувати prompt для зчитування нового числа та додавати його до value\nfunction Accumulator(startingValue) {\n  this.value = startingValue;\n\n  this.read = function (number) {\n    this.value += number;\n  };\n}\n\nconst acc = new Accumulator(18);\nacc.read(3);\nconsole.log('Accumulator constructor result-->', acc.value);\nacc.read(4);\nconsole.log('Accumulator constructor result-->', acc.value);\n\n// task 9\n// Урізання тексту. Створіть функцію truncate(str, maxlength), яка перевіряє довжину srt і , якщо вона перевищує maxlength - замінює кінець str символом трьох крапок, щоб його довжина була рівною ...\n\nfunction truncate(str, maxlength) {\n  strLength = str.length;\n\n  if (strLength > maxlength) {\n    let sliceStr = str.slice(0, maxlength - 3);\n    let newStr = `${sliceStr}...`;\n\n    return newStr;\n  }\n\n  return str;\n}\n\nconsole.log(\n  truncate(\n    'всім привіт я ваш новий колега - розробник по джава програмуванню',\n    20\n  )\n);\n\nconsole.log(truncate('hello one', 20));\n\n//task 10\n// Операції з масивами\nconst styles = ['Jazz', 'Blues'];\n\nstyles.push('Rock-n-Roll');\nstyles[1] = 'Classics';\nstyles.shift();\nstyles.unshift('Rap', 'Reggae');\nconsole.log(styles);\n\n//task 11\n// Сума введених чисел\nfunction sumInput(...args) {\n  let sum = 0;\n  let numbers = [];\n  numbers.push(...args);\n\n  for (let i = 0; i < numbers.length; i++) {\n    sum += numbers[i];\n  }\n\n  return sum;\n}\n\nconsole.log(sumInput(5, 11, 13, -1, 56, 43, 12));\n\n// task 11\n// Напишіть функцію camelize(str), яка перетворює такі рядки \"кккк-кккк-ккк\" в camelCase\n\nfunction camelize(str) {\n  return str\n    .split('-')\n    .map((item, index) =>\n      index === 0 ? item : item[0].toUpperCase() + item.slice(1)\n    )\n    .join('');\n}\n\nconsole.log(camelize('back-ground-color'));\nconsole.log(camelize('font-size-color-paper-bow'));\n\n// task 12\n// Фільтрація за діапазоном\n// Напишіть функцію filterRange(arr, a, b) , яка приймає масив arr, шукає в ньому елементи більші - рівні А та менші-рівні В і віддає масив цих елементів. Ф-ція повинна повертати новий масив і не змінювати старий\nfunction filterRange(arr, a, b) {\n  let newArray = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    let number = arr[i];\n\n    if (number >= a && number <= b) {\n      newArray.push(number);\n    }\n  }\n\n  return newArray;\n}\n\nconsole.log(filterRange([5, 3, 8, 1, 7, 2, 4], 1, 5));\n\n//tassk 13\n// Сортування за спаданням\nfunction copySorted(arr) {\n  const newArray = [...arr].sort((a, b) => b - a);\n\n  return newArray;\n}\n\nconsole.log('Сортування за спаданням -->', copySorted([1, 5, 7, 8, 2, 7, 13]));\nconsole.log('Сортування за спаданням -->', copySorted([4, 6, 7, 8, 2, 7]));\nconsole.log(\n  'Сортування за спаданням -->',\n  copySorted([7, 2, 7, 8, 2, 3, 7, 81])\n);\nconsole.log(\n  'Сортування за спаданням -->',\n  copySorted([13, 7, 9, -34, 8, 9, 4, 5])\n);\n\n// task 14\n// Створити розширений калькулятор\nfunction Calculator() {\n  this.methods = {\n    '-': (a, b) => a - b,\n    '+': (a, b) => a + b,\n  };\n\n  this.calculate = function (str) {\n    let split = str.split(' '),\n      a = +split[0],\n      op = +split[1],\n      b = +split[2];\n\n    if (!this.methods[op] || isNaN(a) || isNaN(b)) {\n      return NaN;\n    }\n\n    return this.methods[op](a, b);\n  };\n\n  this.addMethod = function (name, func) {\n    this.methods[name] = func;\n  };\n}\n\n// task 15\n// Відсортувати користувачів за віком\nconst users = [\n  { name: 'Ivan', age: 25 },\n  { name: 'Petr', age: 30 },\n  { name: 'Masha', age: 28 },\n];\n\nfunction sortByAge(array) {\n  return [...array].map(item => item.age).sort((a, b) => a - b);\n}\n\nconsole.log('Сортування за віком', sortByAge(users));\n\n// task 16\n// Порахуйте середній вік\nfunction getAverageAge(array) {\n  const avgAge = array.reduce((acc, user) => acc + user.age, 0) / array.length;\n\n  return Math.round(avgAge);\n}\n\nconsole.log('Порахуйте середній вік', getAverageAge(users));\n\n// task 17\n// Перемішати масив з однаковою ймовірністю комбінацій\n// дивись мето \"тестування Фішера-Ейтса\"\nlet someArray = [1, 2, 3, 5, 6];\n\nfunction shuffle(array) {\n  return array.sort(() => Math.random() - 0.5);\n}\n\nconsole.log('Перемішування елементів масиву', shuffle(someArray));\n\n// task 18\n//Підсумуйте властивості\nconst salariesObj = {\n  ivan: 100,\n  alex: 300,\n  rozalli: 250,\n};\n// 1) створюємо функцію, яка приймає обєкт\n// 2) використаємо Object.values, яке поверне нам масив значень\n// 3) до масиву приміняємо reduce() і отримаємо суму всіх значень масиву\nfunction totalSalaryObj(obj) {\n  return Object.values(obj).reduce((acc, a) => acc + a, 0);\n}\n\nconsole.log(totalSalaryObj(salariesObj));\n\n// task 19\n// Порахуйте властивості\n\nfunction count(obj) {\n  return Object.keys(obj).length;\n}\n\nconsole.log(count(salariesObj));\n\n// task 20\n// Деструктуроване присвоєння\nlet userData = {\n  name: 'alex',\n  years: 26,\n};\n\nlet { name, years, isAdmin = false } = userData;\n\n// task 21\n// Максимальна зарплата\n// Створіть функції topSalary(userSalaries), яка повертає імя найбілш оплачуваної особи\nlet userSalaries = {\n  alex: 100,\n  denis: 300,\n  ann: 250,\n};\n\nfunction topSalary({ alex, denis, ann } = {}) {\n  let maxSalary = 0;\n  let maxName = null;\n\n  for (let [name, salary] of Object.entries(userSalaries)) {\n    if (maxSalary < salary) {\n      maxSalary = salary;\n      maxName = name;\n    }\n  }\n\n  return maxName;\n}\n\nconsole.log(topSalary(userSalaries));\n"],"names":["$ead79abf603f8e13$var$user","name","console","log","obj","key","$ead79abf603f8e13$var$isEmpty","age","$ead79abf603f8e13$var$totalSalary","object","value","$ead79abf603f8e13$var$sum","jhon","ann","pete","$ead79abf603f8e13$var$menu","width","height","title","$ead79abf603f8e13$var$multiplyNumberic","$ead79abf603f8e13$var$calculator","read","a","b","this","sum","mul","step","up","down","showStep","$ead79abf603f8e13$var$calc","$ead79abf603f8e13$var$acc","startingValue","number","$ead79abf603f8e13$var$truncate","str","maxlength","strLength","length","slice","$ead79abf603f8e13$var$styles","$ead79abf603f8e13$var$camelize","split","map","item","index","toUpperCase","join","$ead79abf603f8e13$var$copySorted","arr","sort","push","shift","unshift","args","sum1","numbers","i","$ead79abf603f8e13$var$sumInput","newArray","$ead79abf603f8e13$var$filterRange","$ead79abf603f8e13$var$users","array","avgAge","reduce","acc1","user1","Math","round","$ead79abf603f8e13$var$getAverageAge","random","$ead79abf603f8e13$var$shuffle","$ead79abf603f8e13$var$salariesObj","ivan","alex","rozalli","Object","values","acc2","keys","$ead79abf603f8e13$var$count","$ead79abf603f8e13$var$name","years","$ead79abf603f8e13$var$years","isAdmin","$ead79abf603f8e13$var$isAdmin","$ead79abf603f8e13$var$userSalaries","denis","maxSalary","maxName","name2","salary","entries","$ead79abf603f8e13$var$topSalary"],"version":3,"file":"html-03.a864110a.js.map"}